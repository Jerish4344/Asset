"""
Django settings for asset_management project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-z3-_v)l##rtz7b372wm)!bd3b6d^)n$x$!k(rlncmjw(=i-k#7"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # Local apps
    "assets",
    "incidents",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "asset_management.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        # Add the global templates directory so Django can discover
        # the HTML files placed under <project_root>/templates/
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "asset_management.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# ------------------------------------------------------------------
# Database
# ------------------------------------------------------------------
# Switch from the default SQLite to MySQL as requested.
# Remember to create the database and grant privileges beforehand.
#
#   CREATE DATABASE asset_management CHARACTER SET utf8mb4;
#   CREATE USER 'asset_user'@'%' IDENTIFIED BY 'asset_password';
#   GRANT ALL PRIVILEGES ON asset_management.* TO 'asset_user'@'%';
#
# Then update the NAME, USER, PASSWORD, HOST, and PORT below as needed.
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": "asset",
        "USER": "root",
        "PASSWORD": "root@2001",
        "HOST": "localhost",
        "PORT": "3306",
        "OPTIONS": {
            "init_command": "SET sql_mode='STRICT_TRANS_TABLES'",
        },
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"

# Media files (uploads)
MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# ------------------------------------------------------------------
# Authentication settings
# ------------------------------------------------------------------
# These URLs are used by Djangoâ€™s built-in auth views (`django.contrib.auth.urls`)
# which we include in *asset_management/urls.py* as the ``accounts/`` namespace.
# They tell Django where to redirect users when they must log in, and where to
# send them after login/logout.

LOGIN_URL = "login"                   # view-name from django.contrib.auth.urls
LOGIN_REDIRECT_URL = "asset_dashboard"
LOGOUT_REDIRECT_URL = "login"

# ------------------------------------------------------------------
# Static files (collected for production via ``collectstatic``)
# ------------------------------------------------------------------
# During development Django serves STATIC_URL directly.  For production we
# additionally need a STATIC_ROOT directory that will contain the collected
# files.

STATIC_ROOT = BASE_DIR / "staticfiles"
